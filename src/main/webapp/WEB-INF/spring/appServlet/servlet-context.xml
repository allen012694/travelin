<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<context:component-scan base-package="fu.cap.travelin" />

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/travelin" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<util:properties id="travelinProp" location="classpath:travelin.properties"/>
	<util:properties id="credentialsProp" location="classpath:credentials.properties"/>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="fu.cap.travelin"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="accountDao" class="fu.cap.travelin.dao.AccountDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="areaDao" class="fu.cap.travelin.dao.AreaDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="articleDao" class="fu.cap.travelin.dao.ArticleDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="commentDao" class="fu.cap.travelin.dao.CommentDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="favoriteDao" class="fu.cap.travelin.dao.FavoriteDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="feedbackDao" class="fu.cap.travelin.dao.FeedbackDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="journalDao" class="fu.cap.travelin.dao.JournalDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="likingDao" class="fu.cap.travelin.dao.LikingDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="messageDao" class="fu.cap.travelin.dao.MessageDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="notificationDao" class="fu.cap.travelin.dao.NotificationDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="placeDao" class="fu.cap.travelin.dao.PlaceDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="suggestionDao" class="fu.cap.travelin.dao.SuggestionDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="tagDao" class="fu.cap.travelin.dao.TagDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="relationshipDao" class="fu.cap.travelin.dao.RelationshipDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	<websocket:message-broker application-destination-prefix="/travelin">
		<websocket:stomp-endpoint path="/nt">
			<websocket:sockjs session-cookie-needed="true"></websocket:sockjs>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic"/>
	</websocket:message-broker>
</beans>
